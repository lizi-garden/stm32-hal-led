ARM GAS  /tmp/ccMCVWMq.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler:
  25              	.LFB67:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
   2:Src/main.c    **** #include "main.h"
   3:Src/main.c    **** #include "gpio.h"
   4:Src/main.c    **** #include "stm32f1xx_hal.h"
   5:Src/main.c    **** 
   6:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
   7:Src/main.c    **** /* USER CODE BEGIN Includes */
   8:Src/main.c    **** 
   9:Src/main.c    **** /* USER CODE END Includes */
  10:Src/main.c    **** 
  11:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  12:Src/main.c    **** /* USER CODE BEGIN PTD */
  13:Src/main.c    **** 
  14:Src/main.c    **** /* USER CODE END PTD */
  15:Src/main.c    **** 
  16:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  17:Src/main.c    **** /* USER CODE BEGIN PD */
  18:Src/main.c    **** /* USER CODE END PD */
  19:Src/main.c    **** 
  20:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  21:Src/main.c    **** /* USER CODE BEGIN PM */
  22:Src/main.c    **** 
  23:Src/main.c    **** /* USER CODE END PM */
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE BEGIN PV */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* USER CODE END PV */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  32:Src/main.c    **** void SystemClock_Config(void);
ARM GAS  /tmp/ccMCVWMq.s 			page 2


  33:Src/main.c    **** /* USER CODE BEGIN PFP */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PFP */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN 0 */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END 0 */
  41:Src/main.c    **** 
  42:Src/main.c    **** /**
  43:Src/main.c    ****   * @brief  The application entry point.
  44:Src/main.c    ****   * @retval int
  45:Src/main.c    ****   */
  46:Src/main.c    **** int main(void)
  47:Src/main.c    **** {
  48:Src/main.c    ****   /* USER CODE BEGIN 1 */
  49:Src/main.c    **** 
  50:Src/main.c    ****   /* USER CODE END 1 */
  51:Src/main.c    **** 
  52:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  55:Src/main.c    ****   HAL_Init();
  56:Src/main.c    **** 
  57:Src/main.c    ****   /* USER CODE BEGIN Init */
  58:Src/main.c    ****   LED_GPIO_Init();
  59:Src/main.c    ****   KEY_GPIO_Init();
  60:Src/main.c    **** 
  61:Src/main.c    ****   /* USER CODE END Init */
  62:Src/main.c    **** 
  63:Src/main.c    ****   /* Configure the system clock */
  64:Src/main.c    ****   SystemClock_Config();
  65:Src/main.c    **** 
  66:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  67:Src/main.c    **** 
  68:Src/main.c    ****   /* USER CODE END SysInit */
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* Initialize all configured peripherals */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE BEGIN 2 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* USER CODE END 2 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Infinite loop */
  77:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  78:Src/main.c    ****   while (1)
  79:Src/main.c    ****   {
  80:Src/main.c    ****       if(KEY_Scan(KEY1_Port, KEY1_Pin))
  81:Src/main.c    ****           LED_R_TOGGLE;
  82:Src/main.c    ****     /* USER CODE END WHILE */
  83:Src/main.c    **** 
  84:Src/main.c    ****     /* USER CODE BEGIN 3 */
  85:Src/main.c    ****   }
  86:Src/main.c    ****   /* USER CODE END 3 */
  87:Src/main.c    **** }
  88:Src/main.c    **** 
  89:Src/main.c    **** /**
ARM GAS  /tmp/ccMCVWMq.s 			page 3


  90:Src/main.c    ****   * @brief System Clock Configuration
  91:Src/main.c    ****   * @retval None
  92:Src/main.c    ****   */
  93:Src/main.c    **** void SystemClock_Config(void)
  94:Src/main.c    **** {
  95:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  96:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  97:Src/main.c    **** 
  98:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
  99:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 100:Src/main.c    ****   */
 101:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 102:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 103:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 104:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 105:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 106:Src/main.c    ****   {
 107:Src/main.c    ****     Error_Handler();
 108:Src/main.c    ****   }
 109:Src/main.c    **** 
 110:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 111:Src/main.c    ****   */
 112:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 113:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 114:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 115:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 116:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 117:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 118:Src/main.c    **** 
 119:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 120:Src/main.c    ****   {
 121:Src/main.c    ****     Error_Handler();
 122:Src/main.c    ****   }
 123:Src/main.c    **** }
 124:Src/main.c    **** 
 125:Src/main.c    **** /* USER CODE BEGIN 4 */
 126:Src/main.c    **** 
 127:Src/main.c    **** /* USER CODE END 4 */
 128:Src/main.c    **** 
 129:Src/main.c    **** /**
 130:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 131:Src/main.c    ****   * @retval None
 132:Src/main.c    ****   */
 133:Src/main.c    **** void Error_Handler(void)
 134:Src/main.c    **** {
  27              		.loc 1 134 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 135:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 136:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 137:Src/main.c    ****   __disable_irq();
  33              		.loc 1 137 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
ARM GAS  /tmp/ccMCVWMq.s 			page 4


  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  /tmp/ccMCVWMq.s 			page 5


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  /tmp/ccMCVWMq.s 			page 6


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 138:Src/main.c    ****   while (1)
  49              		.loc 1 138 3 discriminator 1 view .LVU4
 139:Src/main.c    ****   {
 140:Src/main.c    ****   }
  50              		.loc 1 140 3 discriminator 1 view .LVU5
 138:Src/main.c    ****   while (1)
  51              		.loc 1 138 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE67:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
ARM GAS  /tmp/ccMCVWMq.s 			page 7


  62              		.fpu softvfp
  64              	SystemClock_Config:
  65              	.LFB66:
  94:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  66              		.loc 1 94 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 64
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 00B5     		push	{lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 14, -4
  74 0002 91B0     		sub	sp, sp, #68
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 72
  95:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  77              		.loc 1 95 3 view .LVU8
  95:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 95 22 is_stmt 0 view .LVU9
  79 0004 2822     		movs	r2, #40
  80 0006 0021     		movs	r1, #0
  81 0008 06A8     		add	r0, sp, #24
  82 000a FFF7FEFF 		bl	memset
  83              	.LVL0:
  96:Src/main.c    **** 
  84              		.loc 1 96 3 is_stmt 1 view .LVU10
  96:Src/main.c    **** 
  85              		.loc 1 96 22 is_stmt 0 view .LVU11
  86 000e 0023     		movs	r3, #0
  87 0010 0193     		str	r3, [sp, #4]
  88 0012 0293     		str	r3, [sp, #8]
  89 0014 0393     		str	r3, [sp, #12]
  90 0016 0493     		str	r3, [sp, #16]
  91 0018 0593     		str	r3, [sp, #20]
 101:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  92              		.loc 1 101 3 is_stmt 1 view .LVU12
 101:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  93              		.loc 1 101 36 is_stmt 0 view .LVU13
  94 001a 0223     		movs	r3, #2
  95 001c 0693     		str	r3, [sp, #24]
 102:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  96              		.loc 1 102 3 is_stmt 1 view .LVU14
 102:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  97              		.loc 1 102 30 is_stmt 0 view .LVU15
  98 001e 0123     		movs	r3, #1
  99 0020 0A93     		str	r3, [sp, #40]
 103:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 100              		.loc 1 103 3 is_stmt 1 view .LVU16
 103:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 101              		.loc 1 103 41 is_stmt 0 view .LVU17
 102 0022 1023     		movs	r3, #16
 103 0024 0B93     		str	r3, [sp, #44]
 104:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 104              		.loc 1 104 3 is_stmt 1 view .LVU18
 105:Src/main.c    ****   {
 105              		.loc 1 105 3 view .LVU19
 105:Src/main.c    ****   {
ARM GAS  /tmp/ccMCVWMq.s 			page 8


 106              		.loc 1 105 7 is_stmt 0 view .LVU20
 107 0026 06A8     		add	r0, sp, #24
 108 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 109              	.LVL1:
 105:Src/main.c    ****   {
 110              		.loc 1 105 6 view .LVU21
 111 002c 68B9     		cbnz	r0, .L7
 112:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 112              		.loc 1 112 3 is_stmt 1 view .LVU22
 112:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 113              		.loc 1 112 31 is_stmt 0 view .LVU23
 114 002e 0F23     		movs	r3, #15
 115 0030 0193     		str	r3, [sp, #4]
 114:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 116              		.loc 1 114 3 is_stmt 1 view .LVU24
 114:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 117              		.loc 1 114 34 is_stmt 0 view .LVU25
 118 0032 0021     		movs	r1, #0
 119 0034 0291     		str	r1, [sp, #8]
 115:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 120              		.loc 1 115 3 is_stmt 1 view .LVU26
 115:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 121              		.loc 1 115 35 is_stmt 0 view .LVU27
 122 0036 0391     		str	r1, [sp, #12]
 116:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 123              		.loc 1 116 3 is_stmt 1 view .LVU28
 116:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 124              		.loc 1 116 36 is_stmt 0 view .LVU29
 125 0038 0491     		str	r1, [sp, #16]
 117:Src/main.c    **** 
 126              		.loc 1 117 3 is_stmt 1 view .LVU30
 117:Src/main.c    **** 
 127              		.loc 1 117 36 is_stmt 0 view .LVU31
 128 003a 0591     		str	r1, [sp, #20]
 119:Src/main.c    ****   {
 129              		.loc 1 119 3 is_stmt 1 view .LVU32
 119:Src/main.c    ****   {
 130              		.loc 1 119 7 is_stmt 0 view .LVU33
 131 003c 01A8     		add	r0, sp, #4
 132 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 133              	.LVL2:
 119:Src/main.c    ****   {
 134              		.loc 1 119 6 view .LVU34
 135 0042 20B9     		cbnz	r0, .L8
 123:Src/main.c    **** 
 136              		.loc 1 123 1 view .LVU35
 137 0044 11B0     		add	sp, sp, #68
 138              	.LCFI2:
 139              		.cfi_remember_state
 140              		.cfi_def_cfa_offset 4
 141              		@ sp needed
 142 0046 5DF804FB 		ldr	pc, [sp], #4
 143              	.L7:
 144              	.LCFI3:
 145              		.cfi_restore_state
 107:Src/main.c    ****   }
 146              		.loc 1 107 5 is_stmt 1 view .LVU36
ARM GAS  /tmp/ccMCVWMq.s 			page 9


 147 004a FFF7FEFF 		bl	Error_Handler
 148              	.LVL3:
 149              	.L8:
 121:Src/main.c    ****   }
 150              		.loc 1 121 5 view .LVU37
 151 004e FFF7FEFF 		bl	Error_Handler
 152              	.LVL4:
 153              		.cfi_endproc
 154              	.LFE66:
 156              		.section	.text.main,"ax",%progbits
 157              		.align	1
 158              		.global	main
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	main:
 165              	.LFB65:
  47:Src/main.c    ****   /* USER CODE BEGIN 1 */
 166              		.loc 1 47 1 view -0
 167              		.cfi_startproc
 168              		@ Volatile: function does not return.
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 08B5     		push	{r3, lr}
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
  55:Src/main.c    **** 
 176              		.loc 1 55 3 view .LVU39
 177 0002 FFF7FEFF 		bl	HAL_Init
 178              	.LVL5:
  58:Src/main.c    ****   KEY_GPIO_Init();
 179              		.loc 1 58 3 view .LVU40
 180 0006 FFF7FEFF 		bl	LED_GPIO_Init
 181              	.LVL6:
  59:Src/main.c    **** 
 182              		.loc 1 59 3 view .LVU41
 183 000a FFF7FEFF 		bl	KEY_GPIO_Init
 184              	.LVL7:
  64:Src/main.c    **** 
 185              		.loc 1 64 3 view .LVU42
 186 000e FFF7FEFF 		bl	SystemClock_Config
 187              	.LVL8:
 188              	.L10:
  78:Src/main.c    ****   {
 189              		.loc 1 78 3 view .LVU43
  80:Src/main.c    ****           LED_R_TOGGLE;
 190              		.loc 1 80 7 view .LVU44
  80:Src/main.c    ****           LED_R_TOGGLE;
 191              		.loc 1 80 10 is_stmt 0 view .LVU45
 192 0012 0121     		movs	r1, #1
 193 0014 0448     		ldr	r0, .L13
 194 0016 FFF7FEFF 		bl	KEY_Scan
 195              	.LVL9:
  80:Src/main.c    ****           LED_R_TOGGLE;
ARM GAS  /tmp/ccMCVWMq.s 			page 10


 196              		.loc 1 80 9 view .LVU46
 197 001a 0028     		cmp	r0, #0
 198 001c F9D0     		beq	.L10
  81:Src/main.c    ****     /* USER CODE END WHILE */
 199              		.loc 1 81 11 is_stmt 1 view .LVU47
 200 001e 2021     		movs	r1, #32
 201 0020 0248     		ldr	r0, .L13+4
 202 0022 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 203              	.LVL10:
 204 0026 F4E7     		b	.L10
 205              	.L14:
 206              		.align	2
 207              	.L13:
 208 0028 00080140 		.word	1073809408
 209 002c 000C0140 		.word	1073810432
 210              		.cfi_endproc
 211              	.LFE65:
 213              		.text
 214              	.Letext0:
 215              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 216              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 217              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 218              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 219              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 220              		.file 8 "Inc/gpio.h"
 221              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 222              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 223              		.file 11 "<built-in>"
ARM GAS  /tmp/ccMCVWMq.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccMCVWMq.s:16     .text.Error_Handler:0000000000000000 $t
     /tmp/ccMCVWMq.s:24     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccMCVWMq.s:57     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccMCVWMq.s:64     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccMCVWMq.s:157    .text.main:0000000000000000 $t
     /tmp/ccMCVWMq.s:164    .text.main:0000000000000000 main
     /tmp/ccMCVWMq.s:208    .text.main:0000000000000028 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
LED_GPIO_Init
KEY_GPIO_Init
KEY_Scan
HAL_GPIO_TogglePin
